{
	"id": 0,
	"name": "reporters",
	"kind": 0,
	"flags": {},
	"children": [
		{
			"id": 1,
			"name": "\"index.d\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "C:/Users/jo_vd_000/Dropbox/2015/reporters-git/build/scripts/index.d.ts",
			"children": [
				{
					"id": 2,
					"name": "reporters",
					"kind": 2,
					"kindString": "Module",
					"flags": {
						"isExported": true,
						"hasExportAssignment": true
					},
					"comment": {
						"shortText": "Collection of reporters the gather information of different node modules in a uniform way to log them all in the same format."
					},
					"signatures": [
						{
							"id": 3,
							"name": "reporters",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Create a reporter for a specific node module, messages are captured and send to the output."
							},
							"parameters": [
								{
									"id": 4,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "name of the internal reporter that captures messages"
									},
									"type": {
										"type": "instrinct",
										"name": "string"
									}
								},
								{
									"id": 5,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "Optional options for this reporter\n"
									},
									"type": {
										"type": "reference",
										"name": "IInputOptions",
										"id": 44
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "IInput",
								"id": 43
							}
						}
					],
					"children": [
						{
							"id": 6,
							"name": "debug",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Enable debug messages"
							},
							"type": {
								"type": "instrinct",
								"name": "boolean"
							}
						},
						{
							"id": 7,
							"name": "output",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Function or array of functions that can handle messages.\nAssign one or more results from getOutput(...)"
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"isArray": true,
										"name": "IOutput",
										"id": 104
									},
									{
										"type": "reference",
										"name": "IOutput",
										"id": 104
									}
								]
							}
						},
						{
							"id": 22,
							"name": "filterOrUpdate",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 23,
									"name": "filterOrUpdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Called before reporting\nThis is your change to filter or update messages"
									},
									"parameters": [
										{
											"id": 24,
											"name": "messages",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"isArray": true,
												"name": "IMessage",
												"id": 54
											}
										}
									],
									"type": {
										"type": "reference",
										"isArray": true,
										"name": "IMessage",
										"id": 54
									}
								}
							]
						},
						{
							"id": 11,
							"name": "getAvailable",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 12,
									"name": "getAvailable",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get a list of availabe built-in reporters that create messages"
									},
									"type": {
										"type": "instrinct",
										"isArray": true,
										"name": "string"
									}
								}
							]
						},
						{
							"id": 13,
							"name": "getInputCreator",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 14,
									"name": "getInputCreator",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get function that creates a reporter for a node module"
									},
									"parameters": [
										{
											"id": 15,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "name of the reporter to return a create method for\n"
											},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "IInputCreator",
										"id": 47
									}
								}
							]
						},
						{
							"id": 16,
							"name": "getOutput",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 17,
									"name": "getOutput",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get a preconfigured function that handles messages by name\nUse reporters.getOutputs() to get a list of available outputs."
									},
									"parameters": [
										{
											"id": 18,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "name of the internal output handler to load that will report messages"
											},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										},
										{
											"id": 19,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "Optional options for this output\n"
											},
											"type": {
												"type": "instrinct",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "IOutput",
										"id": 104
									}
								}
							]
						},
						{
							"id": 20,
							"name": "getOutputs",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 21,
									"name": "getOutputs",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get a list of available functions that can handle messages"
									},
									"type": {
										"type": "instrinct",
										"isArray": true,
										"name": "string"
									}
								}
							]
						},
						{
							"id": 8,
							"name": "logDebug",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 9,
									"name": "logDebug",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 10,
											"name": "args",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "instrinct",
												"isArray": true,
												"name": "any"
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 30,
							"name": "report",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 31,
									"name": "report",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Report messages to the configured outputs"
									},
									"parameters": [
										{
											"id": 32,
											"name": "messages",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "a list of messages that should be handled by the output (list).\n"
											},
											"type": {
												"type": "reference",
												"isArray": true,
												"name": "IMessage",
												"id": 54
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 25,
							"name": "wrapReporter",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 26,
									"name": "wrapReporter",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 27,
											"name": "sourceName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										},
										{
											"id": 28,
											"name": "reporterCreator",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "IInputCreator",
												"id": 47
											}
										},
										{
											"id": 29,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "IInputOptions",
												"id": 44
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "IInput",
										"id": 43
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								6,
								7
							]
						},
						{
							"title": "Functions",
							"kind": 64,
							"children": [
								22,
								11,
								13,
								16,
								20,
								8,
								30,
								25
							]
						}
					]
				}
			],
			"groups": [
				{
					"title": "Modules",
					"kind": 2,
					"children": [
						2
					]
				}
			]
		},
		{
			"id": 33,
			"name": "\"interfaces.d\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "C:/Users/jo_vd_000/Dropbox/2015/reporters-git/build/scripts/interfaces.d.ts",
			"children": [
				{
					"id": 96,
					"name": "IGetSourceMap",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Minimum interface of a message to log"
					},
					"children": [
						{
							"id": 97,
							"name": "filePath",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "instrinct",
								"name": "string"
							}
						},
						{
							"id": 98,
							"name": "getFile",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 99,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 100,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "IVinylFile",
												"id": 66
											}
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								97,
								98
							]
						}
					]
				},
				{
					"id": 43,
					"name": "IInput",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Represents a Reporter, can be anything: function, object, ..."
					}
				},
				{
					"id": 47,
					"name": "IInputCreator",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"signatures": [
						{
							"id": 48,
							"name": "__call",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Internal function that returns a reporter"
							},
							"parameters": [
								{
									"id": 49,
									"name": "done",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "call with extracted messages"
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 50,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 51,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 52,
															"name": "messages",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"isArray": true,
																"name": "IMessage",
																"id": 54
															}
														}
													],
													"type": {
														"type": "instrinct",
														"name": "void"
													}
												}
											]
										}
									}
								},
								{
									"id": 53,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "set of options that reprorter can use\n"
									},
									"type": {
										"type": "reference",
										"name": "IInputOptions",
										"id": 44
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "IInput",
								"id": 43
							}
						}
					]
				},
				{
					"id": 44,
					"name": "IInputOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Options that can be passed when creating a reporter"
					},
					"children": [
						{
							"id": 45,
							"name": "debug",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "log input of reporter"
							},
							"type": {
								"type": "instrinct",
								"name": "boolean"
							}
						},
						{
							"id": 46,
							"name": "sourceMaps",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Default: autodetect, false: don't use sourceMap, or relative path to sourcemap"
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "instrinct",
										"name": "boolean"
									},
									{
										"type": "instrinct",
										"name": "string"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								45,
								46
							]
						}
					]
				},
				{
					"id": 54,
					"name": "IMessage",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Minimum interface of a message to log"
					},
					"children": [
						{
							"id": 60,
							"name": "code",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "warning/error/info code of this message"
							},
							"type": {
								"type": "instrinct",
								"name": "string"
							}
						},
						{
							"id": 58,
							"name": "colNbr",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Column number where error/warning/info is located, starting from 1"
							},
							"type": {
								"type": "instrinct",
								"name": "number"
							}
						},
						{
							"id": 61,
							"name": "description",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Description of the error/warning/info"
							},
							"type": {
								"type": "instrinct",
								"name": "string"
							}
						},
						{
							"id": 56,
							"name": "filePath",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "File location where error/warning/info is located"
							},
							"type": {
								"type": "instrinct",
								"name": "string"
							}
						},
						{
							"id": 63,
							"name": "getFile",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "when file is not yet saved, you can pass a Vinyl File (eg: from gulp stream)\nThis can be used to extract inline sourcemap information"
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 64,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 65,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "IVinylFile",
												"id": 66
											}
										}
									]
								}
							}
						},
						{
							"id": 57,
							"name": "lineNbr",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Line number where error/warning/info is located, starting from 1"
							},
							"type": {
								"type": "instrinct",
								"name": "number"
							}
						},
						{
							"id": 62,
							"name": "options",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Options used at input"
							},
							"type": {
								"type": "reference",
								"name": "IInputOptions",
								"id": 44
							}
						},
						{
							"id": 55,
							"name": "sourceName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "input reporter name (eg: jshint)"
							},
							"type": {
								"type": "instrinct",
								"name": "string"
							}
						},
						{
							"id": 59,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "message type: error, warning, info"
							},
							"type": {
								"type": "instrinct",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								60,
								58,
								61,
								56,
								63,
								57,
								62,
								55,
								59
							]
						}
					]
				},
				{
					"id": 104,
					"name": "IOutput",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Function that can report messages\nYou can use reporters.getOutput to get predefined output functions"
					},
					"signatures": [
						{
							"id": 105,
							"name": "__call",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Function that can report messages\nYou can use reporters.getOutput to get predefined output functions"
							},
							"parameters": [
								{
									"id": 106,
									"name": "messages",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"isArray": true,
										"name": "IMessage",
										"id": 54
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 101,
					"name": "IOutputCreator",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Function that returns a fucntion that can report messages"
					},
					"signatures": [
						{
							"id": 102,
							"name": "__call",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Function that returns a fucntion that can report messages"
							},
							"parameters": [
								{
									"id": 103,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "instrinct",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "IOutput",
								"id": 104
							}
						}
					]
				},
				{
					"id": 34,
					"name": "IReporters",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"signatures": [
						{
							"id": 35,
							"name": "__call",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a function to create a reporter"
							},
							"parameters": [
								{
									"id": 36,
									"name": "inputName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "instrinct",
										"name": "string"
									}
								},
								{
									"id": 37,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"name": "IInputOptions",
										"id": 44
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "IInput",
								"id": 43
							}
						}
					],
					"children": [
						{
							"id": 38,
							"name": "debug",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Logs detailed information of what is done."
							},
							"type": {
								"type": "instrinct",
								"name": "boolean"
							}
						},
						{
							"id": 42,
							"name": "sources",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Returns a list of available reporters.\nYou can use one of the available reporters by calling `reporters(sourceName)`:"
							},
							"type": {
								"type": "instrinct",
								"isArray": true,
								"name": "string"
							}
						},
						{
							"id": 39,
							"name": "report",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 40,
									"name": "report",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "This method is used to handle messages.\nThis method is usefull to call when you write your own reporter and you want to log them in the same way as the other reporters."
									},
									"parameters": [
										{
											"id": 41,
											"name": "messages",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"isArray": true,
												"name": "IMessage",
												"id": 54
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "void"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								38,
								42
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								39
							]
						}
					]
				},
				{
					"id": 66,
					"name": "IVinylFile",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Vinyl File"
					},
					"children": [
						{
							"id": 68,
							"name": "base",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Used for relative pathing. Typically where a glob starts."
							},
							"type": {
								"type": "instrinct",
								"name": "string"
							}
						},
						{
							"id": 70,
							"name": "contents",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Type: Buffer|Stream|null (Default: null)"
							},
							"type": {
								"type": "instrinct",
								"name": "any"
							}
						},
						{
							"id": 95,
							"name": "csslint",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "gulp-csslint"
							},
							"type": {
								"type": "instrinct",
								"name": "any"
							}
						},
						{
							"id": 67,
							"name": "cwd",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Default: process.cwd()"
							},
							"type": {
								"type": "instrinct",
								"name": "string"
							}
						},
						{
							"id": 69,
							"name": "path",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Full path to the file."
							},
							"type": {
								"type": "instrinct",
								"name": "string"
							}
						},
						{
							"id": 71,
							"name": "relative",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Returns path.relative for the file base and file path.\nExample:\n var file = new File({\n   cwd: \"/\",\n   base: \"/test/\",\n   path: \"/test/file.js\"\n });\n console.log(file.relative); // file.js"
							},
							"type": {
								"type": "instrinct",
								"name": "string"
							}
						},
						{
							"id": 94,
							"name": "sourceMap",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "gulp-sourcemaps adds sourceMap property"
							},
							"type": {
								"type": "reference",
								"name": "RawSourceMap"
							}
						},
						{
							"id": 80,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 81,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a new File object with all attributes cloned. Custom attributes are deep-cloned."
									},
									"parameters": [
										{
											"id": 82,
											"name": "opts",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 83,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 84,
															"name": "contents",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "instrinct",
																"name": "boolean"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																84
															]
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "File"
									}
								}
							]
						},
						{
							"id": 92,
							"name": "inspect",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 93,
									"name": "inspect",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a pretty String interpretation of the File. Useful for console.log."
									},
									"type": {
										"type": "instrinct",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 72,
							"name": "isBuffer",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 73,
									"name": "isBuffer",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "instrinct",
										"name": "boolean"
									}
								}
							]
						},
						{
							"id": 78,
							"name": "isDirectory",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 79,
									"name": "isDirectory",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "instrinct",
										"name": "boolean"
									}
								}
							]
						},
						{
							"id": 76,
							"name": "isNull",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 77,
									"name": "isNull",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "instrinct",
										"name": "boolean"
									}
								}
							]
						},
						{
							"id": 74,
							"name": "isStream",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 75,
									"name": "isStream",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "instrinct",
										"name": "boolean"
									}
								}
							]
						},
						{
							"id": 85,
							"name": "pipe",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 86,
									"name": "pipe",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "If file.contents is a Buffer, it will write it to the stream.\nIf file.contents is a Stream, it will pipe it to the stream.\nIf file.contents is null, it will do nothing."
									},
									"typeParameter": [
										{
											"id": 87,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ReadWriteStream"
											}
										}
									],
									"parameters": [
										{
											"id": 88,
											"name": "stream",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "typeParameter",
												"name": "T",
												"constraint": {
													"type": "reference",
													"name": "ReadWriteStream"
												}
											}
										},
										{
											"id": 89,
											"name": "opts",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 90,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 91,
															"name": "end",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "instrinct",
																"name": "boolean"
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																91
															]
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "typeParameter",
										"name": "T",
										"constraint": {
											"type": "reference",
											"name": "ReadWriteStream"
										}
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								68,
								70,
								95,
								67,
								69,
								71,
								94
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								80,
								92,
								72,
								78,
								76,
								74,
								85
							]
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						96,
						43,
						47,
						44,
						54,
						104,
						101,
						34,
						66
					]
				}
			]
		}
	],
	"groups": [
		{
			"title": "External modules",
			"kind": 1,
			"children": [
				1,
				33
			]
		}
	]
}